%input#proposal_attributes{:type => "hidden", :name => "proposal_attributes", :value => @proposal.raw_data['attributes'][@proposal.barclamp].to_json}
%p
  %label{:for => "proposal_attributes"}= t('.attributes')
  = link_to "Raw", proposal_barclamp_path(:id => @proposal.name, :controller => @proposal.barclamp, :dep_raw => @dep_raw, :attr_raw => true), :style => "float: right;"
  %div.container
    = render 'barclamp/git/pfsdeps.html.haml'
    = render_instance_selector("database", :database_instance, t('.database_instance'), "database_instance", @proposal)
    = render_instance_selector("keystone", :keystone_instance, t('.keystone_instance'), "keystone_instance", @proposal)
    = render_instance_selector("rabbitmq", :rabbitmq_instance, t('.rabbitmq_instance'), "rabbitmq_instance", @proposal)
    %p
      %label{ :for => :networking_plugin }= t('.networking_plugin')
      = select_tag :networking_plugin, options_for_select([['linuxbridge', 'linuxbridge'], ['openvswitch','openvswitch']], @proposal.raw_data['attributes'][@proposal.barclamp]['networking_plugin']), :onchange => "onPluginChange(); update_value('networking_plugin', 'networking_plugin', 'string')"
    %div{ :id => 'networking_mode' }
      %p
        %label{ :for => :networking_mode }= t('.networking_mode')
        = select_tag :networking_mode, options_for_select([['flat', 'local'], ['gre','gre']], @proposal.raw_data['attributes'][@proposal.barclamp]["networking_mode"]), :onchange => "update_value('networking_mode', 'networking_mode', 'string')"

:javascript
  function onPluginChange() {
    networkingPlugin = $('select#networking_plugin').val();
    if(networkingPlugin == "linuxbridge") {
      $('div#networking_mode').hide();
    } else if (networkingPlugin == "openvswitch") {
      $('div#networking_mode').show();
    }
  }
  $(document).ready(function(){
    onPluginChange();
  });
